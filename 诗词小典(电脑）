#include<stdio.h>

#include<string.h>

#include<ctype.h>

#include<stdlib.h>

#include<conio.h>

#include<time.h>

#define JN 10000

#define FN 13

#define ZN 6

#define L 100

#define qingping system("cls")

#define dakai fp=fopen("mingju.txt","a+")

#define guanbi fclose(fp)

void printf_zhiling(int x);

void printf_caidan();

void printf_shouye();

void printf_chaxunshibai();

void zhiling();

int queren();

int duanju();

int quxiao();

void chaxunmouju();

void chaxun();

void chakan();

void jiance();

void tianjia();

void shanchu();

void quanbu();

void guanli();

FILE *fp;

int i, j, k, l, n;

int xuhao[JN];

char c;

char *z1, *z2;

char *a[JN][2];

char *zhilingn[ZN] = { "", "查找", "查看", "检测", "添加", "删除" };

char *fenge[FN] =

  { "，", "。", "？", "！", "、", "：", "；", ",", ".", "?", "!", ":",

  ";"

};



int main() {

  dakai;

  for (i = 0; i < JN; i++) {

    a[i][0] = (char *)malloc(L * sizeof(char));

    a[i][1] = (char *)malloc(L * sizeof(char));

  }

  a[0][0]="明日复明日",a[0][1]="明日何其多";

  a[1][0]="今朝有酒今朝醉",a[1][1]="明日愁来明日愁";

  n=2;

  while (1) {

    if (fscanf(fp, "%s", a[n][0]) == -1)

      break;

    if (fscanf(fp, "%s", a[n][1]) == -1)

      break;

    n++;

  }

  guanbi;

  qingping;

  printf_shouye();

  while (getch() != '\n');

  while (1) {

    qingping;

    printf_caidan();

    zhiling();

  }

  // printf("%d", n); 

  return 0;

}



void printf_caidan() {

  for (i = 1; i < ZN; i++)

    printf("%s请敲%d\n", zhilingn[i], i);

}



void printf_zhiling(int x) {

  printf("\n\n\n");

  for (i = 1; i < ZN; i++) {

    printf(x == i ? "继续" : "前往");

    printf("%s请敲%d\n", zhilingn[i], i);

  }

  printf("回车返回菜单\n");

}



void printf_shouye() {

  printf("欢迎使用诗词名句小典\n");

  printf("本案实现以下功能\n\n");

  printf("1 查询某句的全句\n");

  printf

    ("  如输入 “明日复明日” 或 “明日何其多” ，均输出\n  明日复明日  明日何其多\n  如输入 “明日” ，则输出\n  明日复明日  明日何其多\n  今朝有酒今朝醉  明日愁来明日愁\n");

  printf("2 查看随机的名句\n");

  printf("  随机看看都有哪些大家喜欢的名句\n");

  printf("3 检测了解的名句\n");

  printf("  随机给出某句，看自己能否写出全句\n");

  printf("4 添加缺少的名句\n");

  printf("  本典有限，不断添加完善\n");

  printf("5 删除错误的名句\n");

  printf("  其句可能有误，删去\n");

  printf("\n回车开始\n");

}



void printf_chaxunshibai() {

  printf("\n\n\n");

  printf("未找到所要查询，可能是因为\n");

  printf("1 本典内容有限，未能包含\n");

  printf("2 输入有错别字，查询失败\n");

  printf("3 该句太过常见，不必查询\n");

}



void zhiling() {

  while (1) {

    switch (getch()) {

    case '1':

      chaxun();

      break;

    case '2':

      chakan();

      break;

    case '3':

      jiance();

      break;

    case '4':

      tianjia();

      break;

    case '5':

      shanchu();

      break;

    case '#':

      quanbu();

      break;

    case '*':

      guanli();

      return;

    case '\n':

      return;

    default:

      break;

    }

  }

}



int queren() {

  for (i = 0; i < n; i++)

    if (!strcmp(a[i][0], a[n][0]) && !strcmp(a[i][1], a[n][1]))

      return 1;

  return 0;

}



int duanju() {

  char *p;

  for (i = 0; i < FN; i++) {

    if ((p = strstr(a[n][0], fenge[i])) != NULL) {

      *p = '\0';

      a[n][1] = i < 7 ? p + 3 : p + 1;

      return 1;

    }

  }

  return 0;

}



int quxiao() {

  printf("（取消及返回请输入n ）\n");

  scanf("%s", a[n][0]);

  if (a[n][0][0] == 'n')

    return 1;

  return 0;

}



void chaxunmouju() {

  l = 0;

  for (i = 0; i < JN; i++)

    xuhao[i] = 0;

  for (i = 0; i < n; i++) {

    if (strstr(a[i][0], a[n][0]) != NULL || strstr(a[i][1], a[n][0]) != NULL) {

      xuhao[l] = i;

      l++;

      printf("%d %s %s\n", l, a[i][0], a[i][1]);

    }

  }

}



void chaxun() {

  qingping;

  printf("请输入所要查询：\n");

  if (quxiao())

    return;

  chaxunmouju();

  if (l == 0)

    printf_chaxunshibai();

  printf_zhiling(1);

  zhiling();

}



void chakan() {

  qingping;

  int a0, a1;

  srand(time(NULL));

  a0 = rand() % n;

  printf("%s  %s\n", a[a0][0], a[a0][1]);

  printf_zhiling(2);

  zhiling();

}



void jiance() {

  qingping;

  int a0, a1;

  l = 0;

  srand(time(NULL));

  a0 = rand() % n;

  a1 = rand() % 2;

  printf("%s\n", a[a0][a1]);

  printf("请写出此句的全句，上下句间以空格隔开：\n");

  if (quxiao())

    return;

  while (!l) {

    scanf("%s", a[n][1]);

    if (!strcmp(a[a0][a1], a[n][0]) || !strcmp(a[a0][a1], a[n][1]))

      if (queren()) {

        printf("\n正确\n");

        l = 1;

        break;

      }

    if (l == 0) {

      printf("\n错误\n");

      printf("可继续作答，如要查看正确" "答案请输入y\n");

    }

    if (quxiao())

      return;

    if (a[n][0][0] == 'y') {

      for (i = 0; i < n; i++) {

        if (!strcmp(a[i][0], a[a0][a1]) || !strcmp(a[i][1], a[a0][a1]))

          printf("\n%s  %s\n", a[i][0], a[i][1]);

      }

      l = 1;

      break;

    }

  }

  printf_zhiling(3);

  zhiling();

}



void tianjia() {

  qingping;

  dakai;

  printf

    ("请输入所要添加，上下句之间隔开：\n（中英文逗号、句号、问号、叹号、冒号、分号，\n  中文顿号，空格，换行取其一均可）\n");

  if (quxiao())

    return;

  if (!duanju())

    scanf("%s", a[n][1]);

  if (a[n][1][0] == 'n')

    return;

  if (queren())

    printf("\n本有此句\n");

  else {

    fprintf(fp, "\n%s  %s", a[n][0], a[n][1]);

    n++;

    printf("\n添加成功\n");

  }

  guanbi;

  printf_zhiling(4);

  zhiling();

}



void shanchu() {

  qingping;

  dakai;

  int x = 0;

  printf("请输入所要删除，上下句之间隔开：\n");

  if (quxiao())

    return;

  chaxunmouju();

  if (l == 0)

    printf("\n本无此句\n");

  else {

    printf("\n以上为所查，请输入要删除一句的合法序号：\n");

    while (1) {

      scanf("%d", &x);

      if (0 < x && x <= l)

        break;

      if (getch() == 'n')

        return;

    }

    z1 = a[xuhao[x - 1]][0];

    z2 = a[xuhao[x - 1]][1];

    for (i = xuhao[x - 1]; i < n - 1; i++)

      a[i][0] = a[i + 1][0], a[i][1] = a[i + 1][1];

    n--;

    a[n][0] = z1, a[n][1] = z2;

    guanbi;

    fp = fopen("mingju.txt", "w");

    for (i = 2; i < n; i++)

      fprintf(fp, "%s  %s\n", a[i][0], a[i][1]);

    printf("\n删除成功\n");

  }

  guanbi;

  printf_zhiling(5);

  zhiling();

}



void quanbu() {

  qingping;

  for (i = 0; i < n; i++)

    printf("%s  %s\n", a[i][0], a[i][1]);

}



void guanli() {

  qingping;

  int x = 0;

  for (i = 0; i < n; i++)

    printf("%d %s  %s\n", i + 1, a[i][0], a[i][1]);

  if (getchar() == 'd' && getchar() == 'e' && getchar() == 'l') {

    while (1) {

      scanf("%d", &x);

      if (0 < x && x <= n)

        break;

      getch();

    }

    fp = fopen("mingju.txt", "w");

    z1 = a[x - 1][0];

    z2 = a[x - 1][1];

    for (i = x - 1; i < n - 1; i++)

      a[i][0] = a[i + 1][0], a[i][1] = a[i + 1][1];

    n--;

    a[n][0] = z1, a[n][1] = z2;

    for (i = 2; i < n; i++) {

      fprintf(fp, "%s  %s\n", a[i][0], a[i][1]);

    }

    printf("\n删除成功\n");

    guanbi;

  }

}

© 2018 GitHub, Inc.
Terms
Privacy
Security
Status
Help
 
Contact GitHub
Pricing
API
Training
Blog
About

Press h to open a hovercard with more details. 
